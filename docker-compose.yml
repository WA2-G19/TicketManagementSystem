version: "2.1"
services:

  application:
    container_name: application
    build:
      context: .
    depends_on:
      - postgres
      - keycloak
    ports:
      - "8080:8080"

  postgres:
    container_name: database
    image: postgres:latest
    environment:
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./database/.:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:latest
    ports:
      - "8081:8080"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    volumes:
      - keycloak-data:/opt/keycloak/data
      - ./keycloak/.:/opt/keycloak/data/import
    command:
      - start-dev
      - --import-realm

  tempo:
    image: grafana/tempo
    extra_hosts: [ 'host.docker.internal:host-gateway' ]
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./tempo/tempo-local.yaml:/etc/tempo.yaml:ro
      - ./tempo-data:/tmp/tempo
    ports:
      - "14268"  # jaeger ingest
      - "9411:9411" # zipkin

  loki:
    image: grafana/loki
    extra_hosts: [ 'host.docker.internal:host-gateway' ]
    command: [ "-config.file=/etc/loki/local-config.yaml" ]
    ports:
      - "3100:3100"                                   # loki needs to be exposed so it receives logs
    environment:
      - JAEGER_AGENT_HOST=tempo
      - JAEGER_ENDPOINT=http://tempo:14268/api/traces # send traces to Tempo
      - JAEGER_SAMPLER_TYPE=const
      - JAEGER_SAMPLER_PARAM=1

  prometheus:
    image: prom/prometheus
    extra_hosts: [ 'host.docker.internal:host-gateway' ]
    command:
      - --enable-feature=exemplar-storage
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana
    extra_hosts: [ 'host.docker.internal:host-gateway' ]
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - "3000:3000"
volumes:
  postgres-data:
    driver: local
  keycloak-data:
    driver: local
